[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "claude-code-memory"
version = "0.1.0"
description = "A Neo4j-based MCP memory server for Claude Code with intelligent relationship tracking"
authors = [
    {name = "Claude Code", email = "claude@anthropic.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
keywords = ["mcp", "memory", "neo4j", "claude", "ai", "knowledge-graph"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "mcp>=1.0.0",
    "neo4j>=5.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "asyncio>=3.11.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/viralvoodoo/claude-code-memory"
Repository = "https://github.com/viralvoodoo/claude-code-memory"
Issues = "https://github.com/viralvoodoo/claude-code-memory/issues"

[project.scripts]
claude-memory = "claude_memory.server:main"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
]

[tool.hatch.build.targets.wheel]
packages = ["src/claude_memory"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "N",  # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
asyncio_mode = "auto"